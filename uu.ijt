LABTITLE=: 'Scientific Units'
LABDEPENDS=: 'math/uu'

0 :0
Tuesday 9 April 2019  12:15:19
-
done to…
NB. ========…
NB. ========…
-
open'~Desktop/UU-runlab.txt'  NB. for rewriting notes
)

NB. =========================================================
Lab Section INTRO
Addon: UU converts quantities between different units of
measurement.

It is based on the International System of Units
"Le Système International d'Unités" or "SI".
   http://en.wikipedia.org/wiki/SI_units
   https://www.bipm.org/utils/common/pdf/si_summary_en.pdf

But it knows some other units too.
You can even define your own units by editing the table of
UU constants: uuc.ijs
   open '~addons/math/uu/uuc.ijs'
)
load 'math/uu'

uu '3 ft'
uu '1 yd'
uu '1 kWh'

NB. =========================================================
Lab Section CONVERT
Monadic uu converts to the base units of SI:
   metre [m], kilogram [kg], second [s], Ampere [A],
   Kelvin [K], candela [cd], mole [mol].

But if you specify target units as the left argument,
uu will convert to those units instead...
)

'ft' uu '1 yd'
'yd' uu '6 ft'
'J'  uu '1 kWh'

NB. =========================================================
Lab Section COMPATIBLE1
...But of course only if the units are compatible.

If they are not, uu returns a (string) error message...
)

'ft'  uu '1 kWh'

NB. =========================================================
Lab Section COMPATIBLE2
The Joule [J] is the SI unit of energy.

How do you find out which units are compatible with [J]?

All energy units expand into the base units: [kg m²/s²]

You could try to recall energy units one-by-one
and test them to see if they expand into: [kg m²/s²]
)

uu '1 J'       NB. yes - J is an energy unit
uu '1 erg'     NB. yes - erg is an energy unit
uu '1 eV'      NB. yes - eV is an energy unit
uu '1 cal'     NB. yes - cal is an energy unit
uu '1 kW h'    NB. yes - [kW h] are energy units
uu '1 kWh'     NB. yes - UU knows that kWh is equivalent
uu '1 kW'      NB. NO -- kW is a unit of power not energy!

NB. =========================================================
Lab Section COMPATIBLE3
But uu has a way to help you.

If the argument starts with '*' then uu calls uuengine...
)

uu'*CPAT kg m²/s² > J' NB. yes - J is an energy unit
uu'*CPAT erg > J'  NB. yes - erg is compatible with J
uu'*CPAT eV > J'   NB. yes - ev is compatible with J
uu'*CPAT cal > J'  NB. yes - cal is compatible with J
uu'*CPAT kWh > J'  NB. yes - kWh is compatible with J
uu'*CPAT kW > J'   NB. NO -- kW is not compatible

NB. =========================================================
Lab Section COMPATIBLE4
Verb: uuengine is an all-purpose portal into the UU package.

Its "instructions" are all strings (ascii or utf-8).

The first 4 letters are the instruction code.

uuengine can return:
 • scalar Boolean or integer numbers
 • strings which are units
 • boxed lists

If there is no leading '*' then uu always returns a string.

If the returned string is not a valid quantity
(a number followed by units, in the form of a single string)
then it is an error message
(which always begin with '>>>')

We saw an error message earlier:
 >>> uu: incompatible units: x=[ft] targ=[ft] unit=[kWh]

Here is the same uuengine instruction called directly,
and also (for comparison) via uu
)

uuengine_uu_ 'CPAT J > erg'
uu'*CPAT J > erg'
uu'*CPAT J'  NB. WRONG - CPAT needs 2 units separated by '>'

NB. =========================================================
Lab Section COMPATLIST1
uuengine can be even more helpful.

You can ask it for a list of all the units it knows about
which are compatible with [J]...
)

uu '*CPLI J'

NB. =========================================================
Lab Section COMPATLIST2
But if uuengine doesn't know the units you give it
(or you've misspelt them) then it will reply with 0,
NOT with an error message...
)

uu'*CPAT J > gizmo'

NB. =========================================================
Lab Section COMPATLIST3
NOTE the behavior of uu (as opposed to uuengine)
with unknown units...
)

'gizmo' uu '1 yd'
uu '1 gizmo'

NB. =========================================================
NB. =========================================================
Lab Section SLASH1
'/' is the UU convention for DIMENSIONLESS UNITS.

	>>>>> also mention [*]

This prevents the units string vanishing when you divide
compatible units by each other.)

Dimensionless units are mostly ratios:
   sin, cos, specific gravities, %, etc.
)

uu '1 km/mi'		NB. conversion factor: km --> miles
'%' uu '1 km/mi'	NB. ditto, as a percentage

NB. =========================================================
Lab Section SLASH2
To "divide" two arbitrary units strings, use: udiv

(Don't just put '/' between them, unless you know for certain
that the denominator doesn't contain slash).

Then use: uu -to cancel-out...
)

u1=: 'kg m^2/A^2/s^3'		NB. energy
u2=: 'kg m^2/A^2/s^2'		NB. power
u1 udiv u2
uu  '1 ', u1 udiv u2

NB. =========================================================
Lab Section SI_LOOK1
uu approximates the "SI look-and-feel" with unicode chars
(in utf-8 encoding, the standard for the J session).

To suppress this behavior, enter: uunicode 0

If you enter: uunicode 1
-then uu will not only output utf-8 chars,
but accept them as input too.
)

'Ohm' uu '1 kg m^2/A^2/s^3'
      uu '1 kg m^2/A^2/s^3'

uunicode 0
'Ohm' uu '1 kg m^2/A^2/s^3'
      uu '1 kg m^2/A^2/s^3'

uunicode 1	NB. reset to the default

NB. =========================================================
Lab Section SI_LOOK2
Strict SI units do not use '/' to represent units quotients.
Thus uu accepts [m/s/s] and [m/s^2] (units of acceleration)
whereas SI insists on the format [m s⁻²].

You can force UU to output units in the strict SI convention
by setting: uunicode 2
)

uunicode 0
   uu '1 J'

uunicode 2
   uu '1 J'

uunicode 1	NB. reset to the default


NB. =========================================================
Lab Section ZEPTO1
"SI" allows you to attach a scaling prefix to units.

Most people know about kilo [k-], mega [M-], milli [m-]
and micro [mu-] or [µ]. But there are others.
The full range is:

 	deca- 	hecto- 	kilo- 	mega- 	giga-
 	da 	h 	k 	M 	G
 	10^1 	10^2 	10^3 	10^6 	10^9
	--------------------------------------
 	tera- 	peta- 	exa- 	zetta- 	yotta-
 	T 	P 	E 	Z 	Y
 	10^12 	10^15 	10^18 	10^21 	10^24
	--------------------------------------
 	deci- 	centi- 	milli- 	micro- 	nano-
 	d 	c 	m 	µ [mu]	n
 	10^−1 	10^−2 	10^−3 	10^−6 	10^−9
	--------------------------------------
 	pico- 	femto- 	atto- 	zepto- 	yocto-
 	p 	f 	a 	z 	y
 	10^−12 	10^−15 	10^−18 	10^−21 	10^−24
)

uu '1 GW'	NB. one gigawatt
uu '1e21 zg'	NB. one gram, SI-style
uu '1 g'	NB. -for comparison.
   NB. ...SI takes [kg] not [g] as the basic unit of mass.

NB. =========================================================
Lab Section ZEPTO2
The term "micron" and the symbol µ, representing the
micrometre, were officially accepted between 1879 and 1967,
but officially revoked by the ISI in 1967.
   http://en.wikipedia.org/wiki/Micron

However UU accepts [µ] by itself to mean "micron".

WARNING: not every unicode variant of µ will work!

Use either 'mu' or 'µ' for entering microns [µm]...
)

uu '100 mum'	NB. 100 microns
uu '100 µm'
uu '100 mu'
uu '100 µ'
'Ang' uu '1 µm'	NB. microns --> Ångstrom units
'Å' uu '1 µ'
'µ' uu '1 Å'

NB. =========================================================
Lab Section ZEPTO3
uu accepts scaling prefixes on some non-SI units too.

Why?

Because it's too much trouble to forbid them.
)

cocurrent 'base'

uu '1 zft'	NB. zepto-feet -need very small shoes.
   NB. Earth mass, in zetta-elephants...
'Zelephant' uu '1 ea.mass'
   NB. Earth mass, in yotta-elephants...
sci 10  NB. force exponential numerals above 10
sig 5   NB. decimal places to show
'Yelephant' uu '1 ea.mass'
   NB. Restore recommended settings...
sci 1e5 [ sig 3

NB. =========================================================
Lab Section MISC
Miscellaneous conversions...
)

   NB. yottagrams -in Imperial tons. Heavy stuff...
'ton' uu '1 Yg'
   NB. ditto, in metric tons (tonnes)...
't' uu '1000 Zg'
   NB. Weight of the Space shuttle -in African elephants...
'elephant' uu '2030 t'
   NB. Mass of the moon in terms of earth...
'ea.mass' uu '1 moon.mass'
   NB. Moon gravity, in units of earth-gravity...
'grav' uu '1 moon.g'
